<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Namespaces>
  <Namespace Name="Hestia.POS.V2.HestiaPrinterServer">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Hestia.POS.V2.HestiaPrinterServer”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
    <Message Id="POS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">更正命名空间名称“Hestia.POS.V2.HestiaPrinterServer”中“POS”的大小写，将其改为“Pos”。</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="E:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary\bin\Debug\HardwareLibrary.dll">
   <Modules>
    <Module Name="hardwarelibrary.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">用强名称密钥对 'HardwareLibrary.dll' 进行签名。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">使用 CLSCompliant(true)来标记 'HardwareLibrary.dll'，因为它公开外部可见的类型。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Hestia.HardwareLibrary">
       <Types>
        <Type Name="APServerJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="114">更改 'APServerJob.APServerJob(List&lt;string&gt;, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="114">更改 'APServerJob.APServerJob(List&lt;string&gt;, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">更改 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">更改 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Client" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">在成员 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中，更正参数名称 'ClientID' 中“Client”的大小写，将其改为“client”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">在成员 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中，更正参数名称 'ClientID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">在成员 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中，更正参数名称 'JobID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Job" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="104">在成员 'APServerJob.APServerJob(string, string, List&lt;string&gt;, List&lt;string&gt;, DateTime)' 中，更正参数名称 'JobID' 中“Job”的大小写，将其改为“job”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClientID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.ClientID' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#commands" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.commands' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">更改 'APServerJob.commands' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JobID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.JobID' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#messages" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.messages' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">更改 'APServerJob.messages' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#requestTime" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.requestTime' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Status" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJob.Status' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="APServerJobQueue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'MessageBack' 和“messageBack”，使它们的差别不仅仅在于大小写。</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'jobCallback' 和“JobCallback”，使它们的差别不仅仅在于大小写。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetJob()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="73">如果可行，请将 'APServerJobQueue.GetJob()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#jobCallback" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJobQueue.jobCallback' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#messageBack" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'APServerJobQueue.messageBack' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#timer1_Tick(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="25">'APServerJobQueue.timer1_Tick(object)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message Id="sender" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="APServerJobQueue.cs" Line="25">从未用过 'APServerJobQueue.timer1_Tick(object)' 的参数 'sender'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="APServerJobQueue+JobCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'APServerJobQueue.JobCallback'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="APServerJobQueue+MessageBack" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'APServerJobQueue.MessageBack'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="BarCodePrinter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">在 'BarCodePrinter' 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: 'PrintDocument'。如果以前提供过 'BarCodePrinter'，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#docToPrint_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="89">修改 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="101">修改 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="121">修改 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="doc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="57">更正成员名称 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中“doc”的大小写，将其改为“Doc”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="57">从成员名称 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中移除下划线。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="89">'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="110">由于 'Convert.ToDouble(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToDouble(string, IFormatProvider)' 的调用。如果 'Convert.ToDouble(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="111">由于 'Convert.ToDouble(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToDouble(string, IFormatProvider)' 的调用。如果 'Convert.ToDouble(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="74">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="75">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="76">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="77">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="87">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="98">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="118">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="69">由于 'string.EndsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'string.EndsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.EndsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="69">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="73">在方法 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中，请在对 'bp' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="128">在方法 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中，请在对 'new StringFormat()' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="126">在方法 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中，请在对 'printFont' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" TypeName="请不要将文本作为本地化参数传递" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="127">方法 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 将一个文本字符串作为对 'Graphics.MeasureString(string, Font)' 的调用的参数“text”传递。改为从资源表检索以下字符串: "天"。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="78">在外部可见方法 'BarCodePrinter.docToPrint_PrintPage(object, PrintPageEventArgs)' 中，请在使用参数“e”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gapX" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'BarCodePrinter.gapX' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartPrint(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="BarCodePrinter.cs" Line="50">在成员 'BarCodePrinter.StartPrint(string[])' 中，从参数名称 '_content' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GeneralPrinter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'Port' 和“port”，使它们的差别不仅仅在于大小写。</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'Type' 和“type”，使它们的差别不仅仅在于大小写。</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'id' 和“ID”，使它们的差别不仅仅在于大小写。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="46">在成员 'GeneralPrinter.GeneralPrinter(string, string, string)' 中，从参数名称 '_id' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="46">在成员 'GeneralPrinter.GeneralPrinter(string, string, string)' 中，从参数名称 '_port' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="46">在成员 'GeneralPrinter.GeneralPrinter(string, string, string)' 中，从参数名称 '_type' 中移除下划线。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="51">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.GeneralPrinter(string, string, string)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="55">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.GeneralPrinter(string, string, string)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="51">在外部可见方法 'GeneralPrinter.GeneralPrinter(string, string, string)' 中，请在使用参数“_type”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="61">在成员 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中，从参数名称 '_baudrate' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="61">在成员 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中，从参数名称 '_id' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="61">在成员 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中，从参数名称 '_port' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="61">在成员 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中，从参数名称 '_type' 中移除下划线。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="67">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="71">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="67">在外部可见方法 'GeneralPrinter.GeneralPrinter(string, string, string, long)' 中，请在使用参数“_type”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#baudrate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'GeneralPrinter.baudrate' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#id" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'GeneralPrinter.id' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="40">更正成员名称 'GeneralPrinter.ID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#initCom()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="106">在方法 'GeneralPrinter.initCom()' 中，'sp' 对象未按所有异常路径释放。请在对 'sp' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#port" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'GeneralPrinter.port' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Print(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="78">在成员 'GeneralPrinter.Print(string[])' 中，从参数名称 '_content' 中移除下划线。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="80">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.Print(string[])' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="90">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'GeneralPrinter.Print(string[])' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="84">在外部可见方法 'GeneralPrinter.Print(string[])' 中，请在使用参数“_content”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendComand(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="120">在成员 'GeneralPrinter.SendComand(string)' 中，从参数名称 '_comand' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="120">从未使用 'GeneralPrinter.SendComand(string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="_comand" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="120">从未用过 'GeneralPrinter.SendComand(string)' 的参数 '_comand'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendComandCode(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="113">在方法 'GeneralPrinter.SendComandCode(string)' 中，'sp' 对象未按所有异常路径释放。请在对 'sp' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#type" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'GeneralPrinter.type' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="GeneralPrinter.cs" Line="28">由于存在继承方法 'object.GetType()'，属性名 'GeneralPrinter.Type' 会造成混淆。请重命名或移除该属性。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IC" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#asc_hex(System.Byte[],System.Byte[],System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="asc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.asc_hex(byte[], byte[], int)' 中“asc”的大小写，将其改为“Asc”。</Issue>
            </Message>
            <Message Id="hex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.asc_hex(byte[], byte[], int)' 中“hex”的大小写，将其改为“Hex”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.asc_hex(byte[], byte[], int)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.asc_hex(byte[], byte[], int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.asc_hex(byte[], byte[], int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chk_card(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="card" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.chk_card(int)' 中“card”的大小写，将其改为“Card”。</Issue>
            </Message>
            <Message Id="chk" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.chk_card(int)' 中“chk”的大小写，将其改为“Chk”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.chk_card(int)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.chk_card(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.chk_card(int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dv_beep(System.Int32,System.Int16)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="beep" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.dv_beep(int, short)' 中“beep”的大小写，将其改为“Beep”。</Issue>
            </Message>
            <Message Id="dv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.dv_beep(int, short)' 中“dv”的大小写，将其改为“DV”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.dv_beep(int, short)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.dv_beep(int, short)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.dv_beep(int, short)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_status(System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.get_status(int, byte[])' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="status" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.get_status(int, byte[])' 中“status”的大小写，将其改为“Status”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.get_status(int, byte[])' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.get_status(int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.get_status(int, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hex_asc(System.Byte[],System.Byte[],System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="asc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.hex_asc(byte[], byte[], int)' 中“asc”的大小写，将其改为“Asc”。</Issue>
            </Message>
            <Message Id="hex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.hex_asc(byte[], byte[], int)' 中“hex”的大小写，将其改为“Hex”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.hex_asc(byte[], byte[], int)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.hex_asc(byte[], byte[], int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.hex_asc(byte[], byte[], int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#icdev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'IC.icdev' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICstate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'IC.ICstate' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lib_ver(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="lib" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.lib_ver(byte[])' 中“lib”的大小写，将其改为“Lib”。</Issue>
            </Message>
            <Message Id="ver" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.lib_ver(byte[])' 中“ver”的大小写，将其改为“Ver”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.lib_ver(byte[])' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.lib_ver(byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.lib_ver(byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setsc_md(System.Int32,System.Int16)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.setsc_md(int, short)' 中“md”的大小写，将其改为“MD”。</Issue>
            </Message>
            <Message Id="setsc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.setsc_md(int, short)' 中“setsc”的大小写，将其改为“Setsc”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.setsc_md(int, short)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.setsc_md(int, short)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.setsc_md(int, short)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_ver(System.Int32,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="srd" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.srd_ver(int, short, byte[])' 中“srd”的大小写，将其改为“Srd”。</Issue>
            </Message>
            <Message Id="ver" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.srd_ver(int, short, byte[])' 中“ver”的大小写，将其改为“Ver”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.srd_ver(int, short, byte[])' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.srd_ver(int, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.srd_ver(int, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usb_ic_exit(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_exit(int)' 中“exit”的大小写，将其改为“Exit”。</Issue>
            </Message>
            <Message Id="ic" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_exit(int)' 中“ic”的大小写，将其改为“IC”。</Issue>
            </Message>
            <Message Id="usb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_exit(int)' 中“usb”的大小写，将其改为“Usb”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.usb_ic_exit(int)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.usb_ic_exit(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.usb_ic_exit(int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usb_ic_init()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ic" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_init()' 中“ic”的大小写，将其改为“IC”。</Issue>
            </Message>
            <Message Id="init" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_init()' 中“init”的大小写，将其改为“Init”。</Issue>
            </Message>
            <Message Id="usb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC.usb_ic_init()' 中“usb”的大小写，将其改为“Usb”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC.usb_ic_init()' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC.usb_ic_init()'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC.usb_ic_init()' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IC4442" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'IC4442' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#chk_4442(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="chk" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.chk_4442(int)' 中“chk”的大小写，将其改为“Chk”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.chk_4442(int)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.chk_4442(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.chk_4442(int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#csc_4442(System.Int32,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="csc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.csc_4442(int, short, byte[])' 中“csc”的大小写，将其改为“Csc”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IC4442.csc_4442(int, short, byte[])' 中，更正参数名称 'p_string' 中“string”的大小写，将其改为“String”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.csc_4442(int, short, byte[])' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在成员 'IC4442.csc_4442(int, short, byte[])' 中，从参数名称 'p_string' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.csc_4442(int, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.csc_4442(int, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rsc_4442(System.Int32,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="rsc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.rsc_4442(int, short, byte[])' 中“rsc”的大小写，将其改为“Rsc”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IC4442.rsc_4442(int, short, byte[])' 中，更正参数名称 'p_string' 中“string”的大小写，将其改为“String”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.rsc_4442(int, short, byte[])' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在成员 'IC4442.rsc_4442(int, short, byte[])' 中，从参数名称 'p_string' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.rsc_4442(int, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.rsc_4442(int, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rsct_4442(System.Int32,System.Byte&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">考虑使用不需要将 'counter' 作为 out 参数的设计。</Issue>
            </Message>
            <Message Id="rsct" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.rsct_4442(int, out byte)' 中“rsct”的大小写，将其改为“Rsct”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.rsct_4442(int, out byte)' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.rsct_4442(int, out byte)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.rsct_4442(int, out byte)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_4442(System.Int32,System.Int16,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="srd" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.srd_4442(int, short, short, byte[])' 中“srd”的大小写，将其改为“Srd”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IC4442.srd_4442(int, short, short, byte[])' 中，更正参数名称 'r_string' 中“string”的大小写，将其改为“String”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.srd_4442(int, short, short, byte[])' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在成员 'IC4442.srd_4442(int, short, short, byte[])' 中，从参数名称 'r_string' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.srd_4442(int, short, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.srd_4442(int, short, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#swr_4442(System.Int32,System.Int16,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IC4442.swr_4442(int, short, short, byte[])' 中，更正参数名称 'w_string' 中“string”的大小写，将其改为“String”。</Issue>
            </Message>
            <Message Id="swr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.swr_4442(int, short, short, byte[])' 中“swr”的大小写，将其改为“Swr”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.swr_4442(int, short, short, byte[])' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在成员 'IC4442.swr_4442(int, short, short, byte[])' 中，从参数名称 'w_string' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.swr_4442(int, short, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.swr_4442(int, short, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wsc_4442(System.Int32,System.Int16,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IC4442.wsc_4442(int, short, byte[])' 中，更正参数名称 'p_string' 中“string”的大小写，将其改为“String”。</Issue>
            </Message>
            <Message Id="wsc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'IC4442.wsc_4442(int, short, byte[])' 中“wsc”的大小写，将其改为“Wsc”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">从成员名称 'IC4442.wsc_4442(int, short, byte[])' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在成员 'IC4442.wsc_4442(int, short, byte[])' 中，从参数名称 'p_string' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'IC4442.wsc_4442(int, short, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'IC4442.wsc_4442(int, short, byte[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MWUsbICReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#beep(System.Int16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="beep" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="157">更正成员名称 'MWUsbICReader.beep(short)' 中“beep”的大小写，将其改为“Beep”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="157">在成员 'MWUsbICReader.beep(short)' 中，从参数名称 '_time' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bytesToShorts(System.Byte[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="131">'MWUsbICReader.bytesToShorts(byte[])' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="131">从未使用 'MWUsbICReader.bytesToShorts(byte[])' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byteToShort(System.Byte)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="123">'MWUsbICReader.byteToShort(byte)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="123">从未使用 'MWUsbICReader.byteToShort(byte)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#decryptString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="167">'MWUsbICReader.decryptString(string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="167">从未使用 'MWUsbICReader.decryptString(string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="_key" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="167">从未用过 'MWUsbICReader.decryptString(string, string)' 的参数 '_key'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="_originalString" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="167">从未用过 'MWUsbICReader.decryptString(string, string)' 的参数 '_originalString'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#encryptString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="173">'MWUsbICReader.encryptString(string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="173">从未使用 'MWUsbICReader.encryptString(string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="_code" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="173">从未用过 'MWUsbICReader.encryptString(string, string)' 的参数 '_code'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="_key" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="173">从未用过 'MWUsbICReader.encryptString(string, string)' 的参数 '_key'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#exit()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="162">更正成员名称 'MWUsbICReader.exit()' 中“exit”的大小写，将其改为“Exit”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getCard()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="57">更正成员名称 'MWUsbICReader.getCard()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="57">如果可行，请将 'MWUsbICReader.getCard()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getICDev()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="18">更正成员名称 'MWUsbICReader.getICDev()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="18">如果可行，请将 'MWUsbICReader.getICDev()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getStatus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="51">更正成员名称 'MWUsbICReader.getStatus()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="51">如果可行，请将 'MWUsbICReader.getStatus()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readCode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="71">更正成员名称 'MWUsbICReader.readCode()' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="37">更正成员名称 'MWUsbICReader.readData()' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message Id="st" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="44">'MWUsbICReader.readData()' 声明类型为 'int' 的变量 'st'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readVersionInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="28">更正成员名称 'MWUsbICReader.readVersionInfo()' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="31">'MWUsbICReader.readVersionInfo()' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#shortsToBytes(System.Int16[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="142">从未使用 'MWUsbICReader.shortsToBytes(short[])' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="System.Int16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="151">由于 'short.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'MWUsbICReader.shortsToBytes(short[])' 中的此调用替换为对 'short.ToString(IFormatProvider)' 的调用。如果要向用户显示 'short.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="151">由于 'short.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'MWUsbICReader.shortsToBytes(short[])' 中的此调用替换为对 'short.ToString(IFormatProvider)' 的调用。如果要向用户显示 'short.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode(System.Int16[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="86">更正成员名称 'MWUsbICReader.writeCode(short[])' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="86">在成员 'MWUsbICReader.writeCode(short[])' 中，从参数名称 '_codes' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="98">'MWUsbICReader.writeCode(short[])' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="88">在外部可见方法 'MWUsbICReader.writeCode(short[])' 中，请在使用参数“_codes”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="77">更正成员名称 'MWUsbICReader.writeCode(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="77">在成员 'MWUsbICReader.writeCode(string)' 中，考虑将参数名称 '_stringIn' 中的数据类型标识符“string”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="77">在成员 'MWUsbICReader.writeCode(string)' 中，从参数名称 '_stringIn' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="81">'MWUsbICReader.writeCode(string)' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="78">在外部可见方法 'MWUsbICReader.writeCode(string)' 中，请在使用参数“_stringIn”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode6(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="115">修改 'MWUsbICReader.writeCode6(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="102">更正成员名称 'MWUsbICReader.writeCode6(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="102">在成员 'MWUsbICReader.writeCode6(string)' 中，从参数名称 '_codes' 中移除下划线。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="115">'MWUsbICReader.writeCode6(string)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="110">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'MWUsbICReader.writeCode6(string)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="106">在外部可见方法 'MWUsbICReader.writeCode6(string)' 中，请在使用参数“_codes”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="62">更正成员名称 'MWUsbICReader.writeData(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="62">在成员 'MWUsbICReader.writeData(string)' 中，考虑将参数名称 '_stringIn' 中的数据类型标识符“string”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="62">在成员 'MWUsbICReader.writeData(string)' 中，从参数名称 '_stringIn' 中移除下划线。</Issue>
            </Message>
            <Message Id="st" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="MWUsbICReader.cs" Line="66">'MWUsbICReader.writeData(string)' 声明类型为 'int' 的变量 'st'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ParallelPortPrinter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="22">在成员 'ParallelPortPrinter.ParallelPortPrinter(string)' 中，考虑将参数名称 '_portString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="22">在成员 'ParallelPortPrinter.ParallelPortPrinter(string)' 中，从参数名称 '_portString' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloseHandle(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">向 P/Invoke 'ParallelPortPrinter.CloseHandle(int)' 的返回类型添加 MarshalAsAttribute。如果对应的非托管返回类型为 4 字节的 Win32“BOOL”，则使用 MarshalAs(UnmanagedType.Bool)；对于 1 字节的 C++“bool”，请使用 MarshalAs(UnmanagedType.U1)。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'ParallelPortPrinter.CloseHandle(int)'。</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'ParallelPortPrinter.CloseHandle(int)' 的参数 'hObject' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'ParallelPortPrinter.CloseHandle(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFile(System.String,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'ParallelPortPrinter.CreateFile(string, uint, int, int, int, int, int)'。</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'ParallelPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的参数 'lpSecurityAttributes' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message Id="6" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'ParallelPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的参数 'hTemplateFile' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'ParallelPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的返回类型在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'ParallelPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'lpFileName' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFile(System.Int32,System.Byte[],System.Int32,System.Int32&amp;,Hestia.HardwareLibrary.ParallelPortPrinter+OVERLAPPED&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DeclarePInvokesCorrectly" Category="Microsoft.Interoperability" CheckId="CA1415" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="NativeOverlapped" Certainty="95" Level="CriticalError">更改 'ParallelPortPrinter.WriteFile(int, byte[], int, ref int, ref ParallelPortPrinter.OVERLAPPED)' 的声明，使参数 'lpOverlapped' 是指向 System.Threading.NativeOverlapped 的指针。</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">向 P/Invoke 'ParallelPortPrinter.WriteFile(int, byte[], int, ref int, ref ParallelPortPrinter.OVERLAPPED)' 的返回类型添加 MarshalAsAttribute。如果对应的非托管返回类型为 4 字节的 Win32“BOOL”，则使用 MarshalAs(UnmanagedType.Bool)；对于 1 字节的 C++“bool”，请使用 MarshalAs(UnmanagedType.U1)。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'ParallelPortPrinter.WriteFile(int, byte[], int, ref int, ref ParallelPortPrinter.OVERLAPPED)'。</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'ParallelPortPrinter.WriteFile(int, byte[], int, ref int, ref ParallelPortPrinter.OVERLAPPED)' 的参数 'hFile' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'ParallelPortPrinter.WriteFile(int, byte[], int, ref int, ref ParallelPortPrinter.OVERLAPPED)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteString(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="113">'ParallelPortPrinter.WriteString(byte[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="107">在外部可见方法 'ParallelPortPrinter.WriteString(byte[])' 中，请在使用参数“mybyte”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="97">'ParallelPortPrinter.WriteString(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="Mystring" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="ParallelPortPrinter.cs" Line="85">在成员 'ParallelPortPrinter.WriteString(string)' 中，更正参数名称 'Mystring' 中“Mystring”的大小写，将其改为“mystring”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerialPortICReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="92">在成员 'SerialPortICReader.SerialPortICReader(int, long)' 中，从参数名称 '_baud' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="92">在成员 'SerialPortICReader.SerialPortICReader(int, long)' 中，从参数名称 '_port' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#auto_pull(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.auto_pull(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.auto_pull(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#autoPullOut()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.auto_pull(System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="262">'SerialPortICReader.autoPullOut()' 调用 'SerialPortICReader.auto_pull(int)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="auto" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="261">更正成员名称 'SerialPortICReader.autoPullOut()' 中“auto”的大小写，将其改为“Auto”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beep(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.dv_beep(System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="252">'SerialPortICReader.beep(int)' 调用 'SerialPortICReader.dv_beep(int, int)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="beep" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="251">更正成员名称 'SerialPortICReader.beep(int)' 中“beep”的大小写，将其改为“Beep”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="251">在成员 'SerialPortICReader.beep(int)' 中，从参数名称 '_time' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bytesToShorts(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bytes" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="225">更正成员名称 'SerialPortICReader.bytesToShorts(byte[])' 中“bytes”的大小写，将其改为“Bytes”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="225">从未使用 'SerialPortICReader.bytesToShorts(byte[])' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">在外部可见方法 'SerialPortICReader.bytesToShorts(byte[])' 中，请在使用参数“doubleShort”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byteToShort(System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="byte" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="217">更正成员名称 'SerialPortICReader.byteToShort(byte)' 中“byte”的大小写，将其改为“Byte”。</Issue>
            </Message>
            <Message Id="short" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="217">在成员 'SerialPortICReader.byteToShort(byte)' 中，考虑将参数名称 'doubleShort' 中特定于语言的数据类型标识符“Short”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="217">从未使用 'SerialPortICReader.byteToShort(byte)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chk_card(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.chk_card(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.chk_card(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cmp_dvsc(System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.cmp_dvsc(int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.cmp_dvsc(int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#compareCode(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compare" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="279">更正成员名称 'SerialPortICReader.compareCode(byte[])' 中“compare”的大小写，将其改为“Compare”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="279">在成员 'SerialPortICReader.compareCode(byte[])' 中，从参数名称 '_code' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#decryptString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="284">'SerialPortICReader.decryptString(string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="284">从未使用 'SerialPortICReader.decryptString(string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="_key" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="284">从未用过 'SerialPortICReader.decryptString(string, string)' 的参数 '_key'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="_originalString" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="284">从未用过 'SerialPortICReader.decryptString(string, string)' 的参数 '_originalString'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dv_beep(System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.dv_beep(int, int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.dv_beep(int, int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#encryptString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="290">'SerialPortICReader.encryptString(string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="290">从未使用 'SerialPortICReader.encryptString(string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="_code" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="290">从未用过 'SerialPortICReader.encryptString(string, string)' 的参数 '_code'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="_key" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="290">从未用过 'SerialPortICReader.encryptString(string, string)' 的参数 '_key'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#exit()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.ic_exit(System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="257">'SerialPortICReader.exit()' 调用 'SerialPortICReader.ic_exit(int)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="exit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="256">更正成员名称 'SerialPortICReader.exit()' 中“exit”的大小写，将其改为“Exit”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_status(System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.get_status(int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.get_status(int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getCard()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="160">更正成员名称 'SerialPortICReader.getCard()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="160">如果可行，请将 'SerialPortICReader.getCard()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getICDev()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="98">更正成员名称 'SerialPortICReader.getICDev()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="98">如果可行，请将 'SerialPortICReader.getICDev()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getStatus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="154">更正成员名称 'SerialPortICReader.getStatus()' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="154">如果可行，请将 'SerialPortICReader.getStatus()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ic_exit(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.ic_exit(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.ic_exit(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ic_init(System.Int32,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.ic_init(int, long)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.ic_init(int, long)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Init(System.Int32,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="103">在成员 'SerialPortICReader.Init(int, long)' 中，从参数名称 '_baud' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="103">在成员 'SerialPortICReader.Init(int, long)' 中，从参数名称 '_port' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readDeviceCode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="136">更正成员名称 'SerialPortICReader.readDeviceCode()' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="139">'SerialPortICReader.readDeviceCode()' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readE2PROM(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PROM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="145">更正成员名称 'SerialPortICReader.readE2PROM(int, int)' 中“PROM”的大小写，将其改为“Prom”。</Issue>
            </Message>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="145">更正成员名称 'SerialPortICReader.readE2PROM(int, int)' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="145">在成员 'SerialPortICReader.readE2PROM(int, int)' 中，从参数名称 '_len' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="145">在成员 'SerialPortICReader.readE2PROM(int, int)' 中，从参数名称 '_offset' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="148">'SerialPortICReader.readE2PROM(int, int)' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readSNInfo(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="127">更正成员名称 'SerialPortICReader.readSNInfo(int)' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="127">在成员 'SerialPortICReader.readSNInfo(int)' 中，从参数名称 '_len' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="130">'SerialPortICReader.readSNInfo(int)' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readVersionInfo(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="read" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="118">更正成员名称 'SerialPortICReader.readVersionInfo(int)' 中“read”的大小写，将其改为“Read”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="118">在成员 'SerialPortICReader.readVersionInfo(int)' 中，从参数名称 '_len' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="121">'SerialPortICReader.readVersionInfo(int)' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setCodeMode(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="266">更正成员名称 'SerialPortICReader.setCodeMode(int)' 中“set”的大小写，将其改为“Set”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="266">在成员 'SerialPortICReader.setCodeMode(int)' 中，从参数名称 '_mode' 中移除下划线。</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="270">'SerialPortICReader.setCodeMode(int)' 声明类型为 'int' 的变量 'i'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="j" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="274">'SerialPortICReader.setCodeMode(int)' 声明类型为 'int' 的变量 'j'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setsc_md(System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.setsc_md(int, int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.setsc_md(int, int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#shortsToBytes(System.Int16[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="shorts" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="236">更正成员名称 'SerialPortICReader.shortsToBytes(short[])' 中“shorts”的大小写，将其改为“Shorts”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="236">在成员 'SerialPortICReader.shortsToBytes(short[])' 中，从参数名称 '_shorts' 中移除下划线。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="236">从未使用 'SerialPortICReader.shortsToBytes(short[])' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="System.Int16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="245">由于 'short.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'SerialPortICReader.shortsToBytes(short[])' 中的此调用替换为对 'short.ToString(IFormatProvider)' 的调用。如果要向用户显示 'short.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="245">由于 'short.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'SerialPortICReader.shortsToBytes(short[])' 中的此调用替换为对 'short.ToString(IFormatProvider)' 的调用。如果要向用户显示 'short.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">在外部可见方法 'SerialPortICReader.shortsToBytes(short[])' 中，请在使用参数“_shorts”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_dvsc(System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.srd_dvsc(int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.srd_dvsc(int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_eeprom(System.Int32,System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.srd_eeprom(int, int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.srd_eeprom(int, int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_snr(System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.srd_snr(int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.srd_snr(int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#srd_ver(System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.srd_ver(int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.srd_ver(int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#swr_dvsc(System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.swr_dvsc(int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.swr_dvsc(int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#swr_eeprom(System.Int32,System.Int32,System.Int32,System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.swr_eeprom(int, int, int, byte[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.swr_eeprom(int, int, int, byte[])' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#turn_off(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.turn_off(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.turn_off(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#turn_on(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortICReader.turn_on(int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortICReader.turn_on(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#turnOff()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.turn_off(System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="114">'SerialPortICReader.turnOff()' 调用 'SerialPortICReader.turn_off(int)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="turn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="113">更正成员名称 'SerialPortICReader.turnOff()' 中“turn”的大小写，将其改为“Turn”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#turnOn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.turn_on(System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="109">'SerialPortICReader.turnOn()' 调用 'SerialPortICReader.turn_on(int)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="turn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="108">更正成员名称 'SerialPortICReader.turnOn()' 中“turn”的大小写，将其改为“Turn”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode(System.Int16[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="180">更正成员名称 'SerialPortICReader.writeCode(short[])' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="180">在成员 'SerialPortICReader.writeCode(short[])' 中，从参数名称 '_codes' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="192">'SerialPortICReader.writeCode(short[])' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="182">在外部可见方法 'SerialPortICReader.writeCode(short[])' 中，请在使用参数“_codes”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="171">更正成员名称 'SerialPortICReader.writeCode(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="171">在成员 'SerialPortICReader.writeCode(string)' 中，考虑将参数名称 '_stringIn' 中的数据类型标识符“string”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="171">在成员 'SerialPortICReader.writeCode(string)' 中，从参数名称 '_stringIn' 中移除下划线。</Issue>
            </Message>
            <Message Id="res" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="175">'SerialPortICReader.writeCode(string)' 声明类型为 'int' 的变量 'res'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="172">在外部可见方法 'SerialPortICReader.writeCode(string)' 中，请在使用参数“_stringIn”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeCode6(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="209">修改 'SerialPortICReader.writeCode6(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="196">更正成员名称 'SerialPortICReader.writeCode6(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="196">在成员 'SerialPortICReader.writeCode6(string)' 中，从参数名称 '_codes' 中移除下划线。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="209">'SerialPortICReader.writeCode6(string)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="204">由于 'Convert.ToInt32(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'SerialPortICReader.writeCode6(string)' 中的此调用替换为对 'Convert.ToInt32(string, IFormatProvider)' 的调用。如果 'Convert.ToInt32(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="200">在外部可见方法 'SerialPortICReader.writeCode6(string)' 中，请在使用参数“_codes”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeE2PROM(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hestia.HardwareLibrary.SerialPortICReader.swr_eeprom(System.Int32,System.Int32,System.Int32,System.Byte[])" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="167">'SerialPortICReader.writeE2PROM(string)' 调用 'SerialPortICReader.swr_eeprom(int, int, int, byte[])' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="PROM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="165">更正成员名称 'SerialPortICReader.writeE2PROM(string)' 中“PROM”的大小写，将其改为“Prom”。</Issue>
            </Message>
            <Message Id="write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="165">更正成员名称 'SerialPortICReader.writeE2PROM(string)' 中“write”的大小写，将其改为“Write”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="165">在成员 'SerialPortICReader.writeE2PROM(string)' 中，考虑将参数名称 '_stringIn' 中的数据类型标识符“string”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortICReader.cs" Line="165">在成员 'SerialPortICReader.writeE2PROM(string)' 中，从参数名称 '_stringIn' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerialPortPrinter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortPrinter.cs" Line="19">在成员 'SerialPortPrinter.SerialPortPrinter(string)' 中，从参数名称 '_comStr' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloseHandle(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">向 P/Invoke 'SerialPortPrinter.CloseHandle(int)' 的返回类型添加 MarshalAsAttribute。如果对应的非托管返回类型为 4 字节的 Win32“BOOL”，则使用 MarshalAs(UnmanagedType.Bool)；对于 1 字节的 C++“bool”，请使用 MarshalAs(UnmanagedType.U1)。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortPrinter.CloseHandle(int)'。</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'SerialPortPrinter.CloseHandle(int)' 的参数 'hObject' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortPrinter.CloseHandle(int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFile(System.String,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortPrinter.CreateFile(string, uint, int, int, int, int, int)'。</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'SerialPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的参数 'lpSecurityAttributes' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message Id="6" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'SerialPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的参数 'hTemplateFile' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'SerialPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 的返回类型在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortPrinter.CreateFile(string, uint, int, int, int, int, int)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'lpFileName' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFile(System.Int32,System.Byte[],System.Int32,System.Int32&amp;,Hestia.HardwareLibrary.SerialPortPrinter+OVERLAPPED&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DeclarePInvokesCorrectly" Category="Microsoft.Interoperability" CheckId="CA1415" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="NativeOverlapped" Certainty="95" Level="CriticalError">更改 'SerialPortPrinter.WriteFile(int, byte[], int, ref int, ref SerialPortPrinter.OVERLAPPED)' 的声明，使参数 'lpOverlapped' 是指向 System.Threading.NativeOverlapped 的指针。</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">向 P/Invoke 'SerialPortPrinter.WriteFile(int, byte[], int, ref int, ref SerialPortPrinter.OVERLAPPED)' 的返回类型添加 MarshalAsAttribute。如果对应的非托管返回类型为 4 字节的 Win32“BOOL”，则使用 MarshalAs(UnmanagedType.Bool)；对于 1 字节的 C++“bool”，请使用 MarshalAs(UnmanagedType.U1)。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SerialPortPrinter.WriteFile(int, byte[], int, ref int, ref SerialPortPrinter.OVERLAPPED)'。</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'SerialPortPrinter.WriteFile(int, byte[], int, ref int, ref SerialPortPrinter.OVERLAPPED)' 的参数 'hFile' 在 64 位 平台上的字节宽度将为 4。这是不正确的，因为此 API 的实际本机声明表明该参数在 64 位 平台上的字节宽度应为 8。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'int'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke 方法 'SerialPortPrinter.WriteFile(int, byte[], int, ref int, ref SerialPortPrinter.OVERLAPPED)' 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteString(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortPrinter.cs" Line="112">'SerialPortPrinter.WriteString(byte[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortPrinter.cs" Line="106">在外部可见方法 'SerialPortPrinter.WriteString(byte[])' 中，请在使用参数“mybyte”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortPrinter.cs" Line="96">'SerialPortPrinter.WriteString(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="Mystring" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="SerialPortPrinter.cs" Line="84">在成员 'SerialPortPrinter.WriteString(string)' 中，更正参数名称 'Mystring' 中“Mystring”的大小写，将其改为“mystring”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WDDigitalDisplayer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'WDDigitalDisplayer' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#showData(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="27">修改 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="12">更改 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="show" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="12">更正成员名称 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中“show”的大小写，将其改为“Show”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="12">在成员 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中，从参数名称 '_message' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="12">在成员 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中，从参数名称 '_port' 中移除下划线。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="27">'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="message" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="22">'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 声明类型为 'string' 的变量 'message'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="37">在方法 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中，'sp' 对象未按所有异常路径释放。请在对 'sp' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="WDDigitalDisplayer.cs" Line="25">在外部可见方法 'WDDigitalDisplayer.showData(string, List&lt;string&gt;)' 中，请在使用参数“_message”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Hestia.POS.V2.HestiaPrinterServer">
       <Types>
        <Type Name="ControlTool" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'ControlTool' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#findControl(System.Windows.Forms.Control,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1051">更改 'ControlTool.findControl(Control, object)' 中的 'List&lt;Control&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="find" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1051">更正成员名称 'ControlTool.findControl(Control, object)' 中“find”的大小写，将其改为“Find”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1053">在外部可见方法 'ControlTool.findControl(Control, object)' 中，请在使用参数“parent”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1055">在外部可见方法 'ControlTool.findControl(Control, object)' 中，请在使用参数“controlRef”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#findControl(System.Windows.Forms.Control,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="find" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1029">更正成员名称 'ControlTool.findControl(Control, string)' 中“find”的大小写，将其改为“Find”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1030">在方法 'ControlTool.findControl(Control, string)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1031">在外部可见方法 'ControlTool.findControl(Control, string)' 中，请在使用参数“parent”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataAdaptor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#addWholeTable(Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="add" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="904">更正成员名称 'DataAdaptor.addWholeTable(SQLObject, string, DataTable)' 中“add”的大小写，将其改为“Add”。</Issue>
            </Message>
            <Message Id="keyValueList" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="935">'DataAdaptor.addWholeTable(SQLObject, string, DataTable)' 声明类型为 'List&lt;List&lt;string&gt;&gt;' 的变量 'keyValueList'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="960">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.addWholeTable(SQLObject, string, DataTable)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="921">在外部可见方法 'DataAdaptor.addWholeTable(SQLObject, string, DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#deleteWholeTable(Hestia.DBConnection.SQLObject,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="delete" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="444">更正成员名称 'DataAdaptor.deleteWholeTable(SQLObject, string)' 中“delete”的大小写，将其改为“Delete”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="444">从未使用 'DataAdaptor.deleteWholeTable(SQLObject, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="445">在外部可见方法 'DataAdaptor.deleteWholeTable(SQLObject, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#deleteWholeTableWithCondition(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="449">更改 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中的 'List&lt;List&lt;string&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="449">更改 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="449">考虑 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 不嵌套泛型类型 'List&lt;List&lt;string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="delete" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="449">更正成员名称 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中“delete”的大小写，将其改为“Delete”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="449">从未使用 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="460">在外部可见方法 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="455">在外部可见方法 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中，请在使用参数“keyList”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="452">在外部可见方法 'DataAdaptor.deleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中，请在使用参数“keyValueList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#deleteWholeTableWithRows(Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable,System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="delete" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="976">更正成员名称 'DataAdaptor.deleteWholeTableWithRows(SQLObject, string, DataTable, int[])' 中“delete”的大小写，将其改为“Delete”。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="995">在外部可见方法 'DataAdaptor.deleteWholeTableWithRows(SQLObject, string, DataTable, int[])' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="993">在外部可见方法 'DataAdaptor.deleteWholeTableWithRows(SQLObject, string, DataTable, int[])' 中，请在使用参数“rowIndex”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDeleteWholeTable(Hestia.DBConnection.SQLObject,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="483">更改 'DataAdaptor.getDeleteWholeTable(SQLObject, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="483">更正成员名称 'DataAdaptor.getDeleteWholeTable(SQLObject, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="483">从未使用 'DataAdaptor.getDeleteWholeTable(SQLObject, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="sql" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="485">'DataAdaptor.getDeleteWholeTable(SQLObject, string)' 声明类型为 'string' 的变量 'sql'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="ao" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="483">从未用过 'DataAdaptor.getDeleteWholeTable(SQLObject, string)' 的参数 'ao'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDeleteWholeTableWithCondition(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">更改 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中的 'List&lt;List&lt;string&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">更改 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">更改 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">考虑 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 不嵌套泛型类型 'List&lt;List&lt;string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">更正成员名称 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">从未使用 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="ao" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="465">从未用过 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 的参数 'ao'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="472">在外部可见方法 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中，请在使用参数“keyList”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="469">在外部可见方法 'DataAdaptor.getDeleteWholeTableWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string&gt;&gt;)' 中，请在使用参数“keyValueList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMultiColumn(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="371">更改 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 中的 'List&lt;List&lt;string&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="371">更改 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="371">考虑 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 不嵌套泛型类型 'List&lt;List&lt;string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="371">更正成员名称 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="371">从未使用 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="380">在外部可见方法 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="374">在外部可见方法 'DataAdaptor.getMultiColumn(SQLObject, string, List&lt;string&gt;)' 中，请在使用参数“columnNames”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMultiColumnWithCondition(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.String[]&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">更改 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中的 'List&lt;List&lt;string&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">更改 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中的 'List&lt;List&lt;string[]&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">更改 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">考虑 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 不嵌套泛型类型 'List&lt;List&lt;string&gt;&gt;' 的设计。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">考虑 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 不嵌套泛型类型 'List&lt;List&lt;string[]&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">更正成员名称 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="394">从未使用 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="416">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="430">在外部可见方法 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="397">在外部可见方法 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中，请在使用参数“columnNames”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="409">在外部可见方法 'DataAdaptor.getMultiColumnWithCondition(SQLObject, string, List&lt;string&gt;, List&lt;List&lt;string[]&gt;&gt;)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumn(Hestia.DBConnection.SQLObject,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="305">更改 'DataAdaptor.getOneColumn(SQLObject, string, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="305">更正成员名称 'DataAdaptor.getOneColumn(SQLObject, string, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="305">从未使用 'DataAdaptor.getOneColumn(SQLObject, string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="307">在外部可见方法 'DataAdaptor.getOneColumn(SQLObject, string, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithCondition(Hestia.DBConnection.SQLObject,System.String,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="316">更改 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="316">更改 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="316">更正成员名称 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="316">从未使用 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="329">在外部可见方法 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="320">在外部可见方法 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithCondition(Hestia.DBConnection.SQLObject,System.String,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="338">更改 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="338">更改 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="338">更正成员名称 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="338">在成员 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中，考虑将参数名称 'conditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="338">从未使用 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="353">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="357">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="351">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="362">在外部可见方法 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="342">在外部可见方法 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="4" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="353">在外部可见方法 'DataAdaptor.getOneColumnWithCondition(SQLObject, string, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithConditionString(Hestia.DBConnection.SQLObject,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="155">更改 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="155">更正成员名称 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="155">在成员 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 中，考虑将参数名称 'additionalConditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="155">从未使用 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="162">在外部可见方法 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="159">在外部可见方法 'DataAdaptor.getOneColumnWithConditionString(SQLObject, string, string, string)' 中，请在使用参数“additionalConditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithInSet(Hestia.DBConnection.SQLObject,System.String,System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="180">更改 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="180">更改 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="180">更正成员名称 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="180">从未使用 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="192">在外部可见方法 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="4" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="184">在外部可见方法 'DataAdaptor.getOneColumnWithInSet(SQLObject, string, string, string, List&lt;string&gt;)' 中，请在使用参数“conditionValues”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithInSetCondition(Hestia.DBConnection.SQLObject,System.String,System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String[]&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="202">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="202">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="202">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="202">更正成员名称 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="202">从未使用 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="219">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="4" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="206">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中，请在使用参数“conditionValues”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="5" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="214">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithInSetCondition(Hestia.DBConnection.SQLObject,System.String,System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String[]&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">更正成员名称 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">在成员 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中，考虑将参数名称 'conditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="264">从未使用 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="283">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="287">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="296">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="4" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="268">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中，请在使用参数“conditionValues”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="5" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="276">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="6" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="287">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, List&lt;string[]&gt;, string)' 中，请在使用参数“conditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getOneColumnWithInSetCondition(Hestia.DBConnection.SQLObject,System.String,System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="229">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="229">更改 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="229">更正成员名称 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="229">在成员 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中，考虑将参数名称 'conditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="229">从未使用 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="243">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="247">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="255">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="4" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="233">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中，请在使用参数“conditionValues”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="5" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="247">在外部可见方法 'DataAdaptor.getOneColumnWithInSetCondition(SQLObject, string, string, string, List&lt;string&gt;, string)' 中，请在使用参数“conditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTable(Hestia.DBConnection.SQLObject,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="106">更正成员名称 'DataAdaptor.getWholeTable(SQLObject, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="106">从未使用 'DataAdaptor.getWholeTable(SQLObject, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="107">只要 'DataAdaptor.getWholeTable(SQLObject, string)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="107">在方法 'DataAdaptor.getWholeTable(SQLObject, string)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="109">在外部可见方法 'DataAdaptor.getWholeTable(SQLObject, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableID(Hestia.DBConnection.SQLObject,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="42">更正成员名称 'DataAdaptor.getWholeTableID(SQLObject, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="42">更正成员名称 'DataAdaptor.getWholeTableID(SQLObject, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="42">从未使用 'DataAdaptor.getWholeTableID(SQLObject, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="43">只要 'DataAdaptor.getWholeTableID(SQLObject, string)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="43">在方法 'DataAdaptor.getWholeTableID(SQLObject, string)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="47">在外部可见方法 'DataAdaptor.getWholeTableID(SQLObject, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableRows(Hestia.DBConnection.SQLObject,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="24">修改 'DataAdaptor.getWholeTableRows(SQLObject, string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="18">更正成员名称 'DataAdaptor.getWholeTableRows(SQLObject, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="18">从未使用 'DataAdaptor.getWholeTableRows(SQLObject, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="24">'DataAdaptor.getWholeTableRows(SQLObject, string)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="22">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.getWholeTableRows(SQLObject, string)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="26">更改 'DataAdaptor.getWholeTableRows(SQLObject, string)' 以调用指定 MessageBoxOptions 的 MessageBox.Show 重载，并确保当父控件的 RightToLeft 设置为 RightToLeft.Yes 时，设置 MessageBoxOptions.RightAlign 和 MessageBoxOptions.RtlReading。</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="请不要将文本作为本地化参数传递" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="26">方法 'DataAdaptor.getWholeTableRows(SQLObject, string)' 将一个文本字符串作为对 'MessageBox.Show(string)' 的调用的参数“text”传递。改为从资源表检索以下字符串: "找不到指定的数据表单："。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="22">在外部可见方法 'DataAdaptor.getWholeTableRows(SQLObject, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableTopN(Hestia.DBConnection.SQLObject,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="98">更正成员名称 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="98">在方法 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 中，考虑将参数名称 'n' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="98">从未使用 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="99">只要 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="100">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="99">在方法 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="101">在外部可见方法 'DataAdaptor.getWholeTableTopN(SQLObject, string, int)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableTopNID(Hestia.DBConnection.SQLObject,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="32">更正成员名称 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中“NID”的大小写，将其改为“Nid”。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="32">更正成员名称 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="32">在方法 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中，考虑将参数名称 'n' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="32">从未使用 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="33">只要 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="35">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="33">在方法 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="37">在外部可见方法 'DataAdaptor.getWholeTableTopNID(SQLObject, string, int)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableWithCondition(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="114">更改 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="114">更正成员名称 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="114">从未使用 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="115">只要 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="115">在方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="127">在外部可见方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="118">在外部可见方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableWithCondition(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="132">更改 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="132">更正成员名称 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="132">在成员 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中，考虑将参数名称 'conditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="133">只要 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="134">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="133">在方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="149">在外部可见方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="142">在外部可见方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="134">在外部可见方法 'DataAdaptor.getWholeTableWithCondition(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableWithConditionID(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="52">更改 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="52">更正成员名称 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="52">更正成员名称 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="52">从未使用 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="53">只要 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="53">在方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="67">在外部可见方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="57">在外部可见方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getWholeTableWithConditionID(Hestia.DBConnection.SQLObject,System.String,System.Collections.Generic.List`1&lt;System.String[]&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="72">更改 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中的 'List&lt;string[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="72">更正成员名称 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="72">更正成员名称 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中“get”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="72">在成员 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中，考虑将参数名称 'conditionString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="73">只要 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 创建了 DataTable 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="74">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="73">在方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在对 'result' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="92">在外部可见方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“ao”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="83">在外部可见方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditions”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="74">在外部可见方法 'DataAdaptor.getWholeTableWithConditionID(SQLObject, string, List&lt;string[]&gt;, string)' 中，请在使用参数“conditionString”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hasContainKey(System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="490">'DataAdaptor.hasContainKey(List&lt;List&lt;string&gt;&gt;, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="490">从未使用 'DataAdaptor.hasContainKey(List&lt;List&lt;string&gt;&gt;, string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setWholeTableDeleteAdd(Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="857">更正成员名称 'DataAdaptor.setWholeTableDeleteAdd(SQLObject, string, DataTable)' 中“set”的大小写，将其改为“Set”。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="887">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.setWholeTableDeleteAdd(SQLObject, string, DataTable)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="869">在外部可见方法 'DataAdaptor.setWholeTableDeleteAdd(SQLObject, string, DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setWholeTableDeleteInsert(Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="632">修改 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="606">更正成员名称 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中“set”的大小写，将其改为“Set”。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="632">'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="645">由于 'string.ToUpper()' 的行为可能因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'string.ToUpper(CultureInfo)' 的调用。如果要向用户显示 'string.ToUpper(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="703">由于 'string.ToUpper()' 的行为可能因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'string.ToUpper(CultureInfo)' 的调用。如果要向用户显示 'string.ToUpper(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="629">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="714">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="624">在外部可见方法 'DataAdaptor.setWholeTableDeleteInsert(SQLObject, string, DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setWholeTableDeleteInsert(System.Collections.Generic.List`1&lt;System.String&gt;,Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="758">修改 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="732">更改 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="732">更正成员名称 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中“set”的大小写，将其改为“Set”。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="758">'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="keyValueList" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="793">'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 声明类型为 'List&lt;List&lt;string&gt;&gt;' 的变量 'keyValueList'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="771">由于 'string.ToUpper()' 的行为可能因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中的此调用替换为对 'string.ToUpper(CultureInfo)' 的调用。如果要向用户显示 'string.ToUpper(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="828">由于 'string.ToUpper()' 的行为可能因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中的此调用替换为对 'string.ToUpper(CultureInfo)' 的调用。如果要向用户显示 'string.ToUpper(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="755">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="839">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="851">在外部可见方法 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中，请在使用参数“sqlCommand”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="750">在外部可见方法 'DataAdaptor.setWholeTableDeleteInsert(List&lt;string&gt;, SQLObject, string, DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setWholeTableInsert(Hestia.DBConnection.SQLObject,System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="539">修改 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="581">修改 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="504">更改 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="504">更正成员名称 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中“set”的大小写，将其改为“Set”。</Issue>
            </Message>
            <Message Id="exp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="539">'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 声明类型为 'Exception' 的变量 'exp'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="keyValueList" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="545">'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 声明类型为 'List&lt;List&lt;string&gt;&gt;' 的变量 'keyValueList'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="579">由于 'Convert.ToDateTime(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'Convert.ToDateTime(string, IFormatProvider)' 的调用。如果 'Convert.ToDateTime(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="526">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="579">由于 'DateTime.ToString(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中的此调用替换为对 'DateTime.ToString(string, IFormatProvider)' 的调用。如果要向用户显示 'DateTime.ToString(string, IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="588">使用“String.IsNullOrEmpty”调用来替换 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中的 'string.Equals(string)' 调用。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="522">在外部可见方法 'DataAdaptor.setWholeTableInsert(SQLObject, string, DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RelatedDBOperation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'RelatedDBOperation' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GenCM005()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1147">由于 'DateTime.ToString(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'RelatedDBOperation.GenCM005()' 中的此调用替换为对 'DateTime.ToString(string, IFormatProvider)' 的调用。如果要向用户显示 'DateTime.ToString(string, IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1147">由于 'DateTime.ToString(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'RelatedDBOperation.GenCM005()' 中的此调用替换为对 'DateTime.ToString(string, IFormatProvider)' 的调用。如果要向用户显示 'DateTime.ToString(string, IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenRoleFunctionList(Hestia.DBConnection.SQLObject,System.Collections.Generic.List`1&lt;System.String&gt;,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1154">'RelatedDBOperation.GenRoleFunctionList(SQLObject, List&lt;string&gt;, string, List&lt;string&gt;)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1162">由于 'DateTime.ToString(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'RelatedDBOperation.GenRoleFunctionList(SQLObject, List&lt;string&gt;, string, List&lt;string&gt;)' 中的此调用替换为对 'DateTime.ToString(string, IFormatProvider)' 的调用。如果要向用户显示 'DateTime.ToString(string, IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1162">由于 'DateTime.ToString(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'RelatedDBOperation.GenRoleFunctionList(SQLObject, List&lt;string&gt;, string, List&lt;string&gt;)' 中的此调用替换为对 'DateTime.ToString(string, IFormatProvider)' 的调用。如果要向用户显示 'DateTime.ToString(string, IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SynchronizeRole2Function(System.Data.DataTable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="da" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1076">'RelatedDBOperation.SynchronizeRole2Function(DataTable)' 声明类型为 'DataAdaptor' 的变量 'da'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-20 09:09:16Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Old-Project\前台\Hestia\POSExpert\HardwareLibrary" File="DataAdaptor.cs" Line="1082">在外部可见方法 'RelatedDBOperation.SynchronizeRole2Function(DataTable)' 中，请在使用参数“tb”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>程序集应具有有效的强名称</Name>
   <Description>程序集没有强名称，强名称无效，或者强名称只有经过计算机配置后才有效。不应部署处于这种状态的程序集。出现这种情况最常见原因有: 1) 对程序集进行签名后，修改了该程序集的内容；2) 签名过程失败；3) 延迟了程序集签名；4) 存在一个允许检查通过(原本不应通过)的注册表项。</Description>
   <Resolution Name="NoStrongName">用强名称密钥对 {0} 进行签名。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>避免使用类型极少的命名空间</Name>
   <Description>命名空间一般应具有五个以上的类型。</Description>
   <Resolution Name="Default">考虑将“{0}”中定义的类型与另一个命名空间合并。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>避免使用 out 参数</Name>
   <Description>使用 out 参数可能表示存在设计缺陷。虽然有时允许使用 out 参数，但频繁使用这些参数则表示设计没有遵守托管代码的设计原则。</Description>
   <Resolution Name="Default">考虑使用不需要将 {0} 作为 out 参数的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>避免使用未调用的私有代码</Name>
   <Description>存在对外部不可见的未调用代码，该代码不是已知的运行时入口点。如果错误地引发此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">{0} 似乎没有上游 public 或 protected 调用方。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>避免未使用的私有字段</Name>
   <Description>检测到程序集内有似乎未访问过的私有字段。如果错误地引发了此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">似乎从未使用过字段 {0} 或只对它进行过赋值。请使用此字段或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DeclarePInvokesCorrectly" Category="Microsoft.Interoperability" CheckId="CA1415">
   <Name>正确声明 P/Invoke</Name>
   <Description>应正确声明 P/Invoke 方法，以确保运行时行为是正确的。</Description>
   <Resolution Name="NativeOverlapped">更改 {0} 的声明，使参数 {1} 是指向 System.Threading.NativeOverlapped 的指针。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182204(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>不要捕捉一般异常类型</Name>
   <Description>不应捕捉 Exception 或 SystemException。捕捉一般异常类型会使库用户看不到运行时问题，并会使调试复杂化。您应该仅捕捉自己可以进行适当处理的异常。</Description>
   <Resolution Name="Default">修改 {0} 以便捕捉比 {1} 更具体的异常，或者再次引发该异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>不要声明可见实例字段</Name>
   <Description>在其声明类型的外部可见的实例字段会限制您更改这些数据项的实现详细信息的能力。请改用属性。属性不会降低可用性或性能，并且能够提供灵活性，因为它们隐藏了基础数据的实现详细信息。</Description>
   <Resolution Name="Default">由于字段 {0} 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>不要公开泛型列表</Name>
   <Description>不要在对象模型中公开 List&lt;T&gt;。应使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;。List&lt;T&gt; 应通过实现来使用，而不是在对象模型 API 中使用。List&lt;T&gt; 针对性能进行了优化，但代价是需要长期进行版本管理。例如，如果将 List&lt;T&gt; 返回到客户端代码，您将无法再在客户端代码修改集合时收到通知。</Description>
   <Resolution Name="Default">更改 {1} 中的 {0} 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>不要忽略方法结果</Name>
   <Description>对于返回新的字符串实例的方法，应将其结果赋予变量并随后使用。如果未将创建新对象的方法(如 String.ToLower())的结果赋给变量，则该调用便浪费了。</Description>
   <Resolution Name="HResultOrErrorCode">{0} 调用 {1} 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>不要将泛型类型嵌套在成员签名中</Name>
   <Description>避免如下的 API: 要求用户以另一个泛型类型为类型实参来实例化一个泛型类型。这样的语法过于复杂。</Description>
   <Resolution Name="Default">考虑 {0} 不嵌套泛型类型 {1} 的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>不要引发保留的异常类型</Name>
   <Description>用户代码不应创建和引发某些类型的异常，即属于运行时保留的异常类型或太通用的异常类型。太通用的异常类型包括 Exception、SystemException 和 ApplicationException。运行时保留的异常类型包括 ThreadAbortException、OutOfMemoryException、ExecutionEngineException 和 IndexOutOfRangeException。</Description>
   <Resolution Name="TooGeneric">{0} 创建类型为 {1} 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>标识符的大小写应当正确</Name>
   <Description>类型、命名空间和成员标识符应采用 Pascal 大小写格式。参数标识符应采用 Camel 大小写格式。这些标识符内由两个字母组成的首字母缩略词应全部大写，例如，应采用 System.IO，而不是 System.Io。由三个或更多个字母组成的首字母缩略词应采用 Pascal 大小写格式，例如，应采用 System.Xml，而不是 System.XML。Pascal 大小写格式约定每个单词的首字母大写，如 BackColor。Camel 大小写格式约定第一个单词的首字母小写，所有后续单词的首字母都大写，如 backgroundColor。尽管有些由两个字母组成的首字母缩略词习惯采用不完全大写形式，但不能因此而排斥此规则。例如，“DbConnection”很常见，但并不正确，应采用 DBConnection。为了与现有的非托管符号方案兼容，可能需要违反此规则。但一般来说，这些符号在使用它们的程序集之外不可见。</Description>
   <Resolution Name="Member">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="MemberAbbreviation">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。“{2}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="MemberParameter">在成员 {0} 中，更正参数名称 {2} 中“{1}”的大小写，将其改为“{3}”。</Resolution>
   <Resolution Name="MemberParameterAbbreviation">在成员 {0} 中，更正参数名称 {2} 中“{1}”的大小写，将其改为“{3}”。“{3}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="Namespace">更正命名空间名称“{1}”中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>标识符应正确拼写</Name>
   <Description>组成标识符的各单词不应缩写，并且应正确拼写。如果此规则对应识别的词条产生了误报，请将该词添加到 FxCop 自定义字典中。</Description>
   <Resolution Name="MemberParameterMoreMeaningfulName">在方法 {0} 中，考虑将参数名称 {1} 改为一个更能体现其意义的名称。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>标识符应以大小写之外的差别进行区分</Name>
   <Description>所使用的名称不应仅通过大小写差别来保持其唯一性。不论使用区分大小写的语言还是不区分大小写的语言，组件都必须完全可用。如果除大小写外其他上下文均相同，则不区分大小写的语言将无法区分两个名称，因此组件必须避免出现这种情况。</Description>
   <Resolution Name="Member">更改成员名 {0} 和“{1}”，使它们的差别不仅仅在于大小写。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>标识符不应包含类型名称</Name>
   <Description>应避免在参数和成员中使用特定于某一种语言的类型名称，避免在参数中使用数据类型标识符。类型名对于所有开发人员来说可能不够直观。建议选用通用名称，如“value”。如果不足以区分，应确保采用 .NET Framework 库中定义的类型名，并完全避免采用特定于某一种语言的类型名称。例如，特定于 C# 的类型名有“float”(如果通用名称不足以区分，则使用“Single”)和“ulong”(如果通用名称不足以区分，则使用“UInt64”)等等。</Description>
   <Resolution Name="LanguageIndependentMemberParameter">在成员 {0} 中，考虑将参数名称 {2} 中的数据类型标识符“{1}”替换为一个更通用的词条，如“value”。</Resolution>
   <Resolution Name="LanguageSpecificMemberParameter">在成员 {0} 中，考虑将参数名称 {2} 中特定于语言的数据类型标识符“{1}”替换为一个更通用的词条，如“value”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>标识符不应包含下划线</Name>
   <Description>指定标识符时不要使用下划线。系统为应用程序生成的某些 Visual Studio 标识符会包含下划线字符。通常情况下应避免在公共标识符中使用下划线字符。</Description>
   <Resolution Name="Member">从成员名称 {0} 中移除下划线。</Resolution>
   <Resolution Name="MemberParameter">在成员 {0} 中，从参数名称 {1} 中移除下划线。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>用 CLSCompliantAttribute 标记程序集</Name>
   <Description>程序集应使用 CLSCompliant 特性显式说明其 ClS 遵从性。没有此特性的程序集不符合 CLS。即使程序集、模块或类型的某些部分不符合 CLS，这些程序集、模块或类型本身也可以是符合 CLS 的。适用下列规则: 1) 如果元素标记为 CLSCompliant，则所有不符合 CLS 的成员都必须有参数设置为 false 的 CLSCompliant 特性。2) 对于每个不符合 CLS 的成员，都必须提供一个相应的符合 CLS 的备选成员。</Description>
   <Resolution Name="Default">使用 CLSCompliant(true)来标记 {0}，因为它公开外部可见的类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>用 MarshalAs 标记布尔型 P/Invoke 参数</Name>
   <Description>应使用 MarshalAs 特性对所有布尔型 P/Invoke 参数和返回类型进行显式标记。默认情况下，系统会将所有布尔值封送为 4 字节的 UnmanagedType.Bool。这一行为对 Win32“BOOL”参数来说是正确的，但对 C++“bool”参数来说却是不正确的，后者应封送为 1 字节的 UnmanagedType.U1。为了便于维护代码，始终要为布尔型参数和返回值显式指定封送处理信息。</Description>
   <Resolution Name="Return">向 P/Invoke {0} 的返回类型添加 MarshalAsAttribute。如果对应的非托管返回类型为 4 字节的 Win32“BOOL”，则使用 MarshalAs(UnmanagedType.Bool)；对于 1 字节的 C++“bool”，请使用 MarshalAs(UnmanagedType.U1)。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182206(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>将成员标记为 static</Name>
   <Description>不访问实例数据或调用实例方法的方法可标记为 Static (在 Visual Basic 中为 Shared)。这样，编译器会向这些成员发出非虚拟调用站点，以防止在运行时对每个调用进行旨在确保当前对象指针为非 null 的检查。这样可以使对性能比较敏感的代码获得显著的性能提升。在某些情况下，无法访问当前对象实例表明存在正确性问题。</Description>
   <Resolution Name="Default">从未使用 {0} 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>将 P/Invoke 移动到 NativeMethods 类</Name>
   <Description>此类型包含具有 DllImport 特性的成员。具有 DllImport 特性的成员应包含在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中。</Description>
   <Resolution Name="Default">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>嵌套类型不应是可见的</Name>
   <Description>不要使用 public、protected 或 protected internal (Protected Friend)等嵌套类型作为类型的分组方式。使用命名空间实现此目的。嵌套类型仅在极为有限的情况下才是最佳设计。此外，不是所有的用户都能清楚地了解嵌套类型成员的可访问性。枚举数不受此规则限制。</Description>
   <Resolution Name="Default">不要嵌套类型 {0}。或者，更改其可访问性，使它在外部不可见。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke 声明应为可移植声明</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">如代码中所声明的，P/Invoke {1} 的参数 {0} 在 {3} 平台上的字节宽度将为 {2}。这是不正确的，因为此 API 的实际本机声明表明该参数在 {3} 平台上的字节宽度应为 {4}。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 {5}。</Resolution>
   <Resolution Name="Return">如代码中所声明的，P/Invoke {0} 的返回类型在 {2} 平台上的字节宽度将为 {1}。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 {2} 平台上的字节宽度应为 {3}。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122">
   <Name>P/Invoke 声明不应为安全关键的。</Name>
   <Description>P/Invoke 可能无法由透明代码调用，因此不应将它们标记为安全关键方法。这样做可能会使部分开发人员感到迷惑，因为他们可能认为其透明代码应该能够调用 P/Invoke 方法，因为该方法已标记为安全关键的。</Description>
   <Resolution Name="Default">P/Invoke 方法 {0} 已标记为安全关键的。因为 P/Invoke 只能由关键代码调用，所以应将此声明标记为安全关键的，或将其批注完全删除以避免产生误解。</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes 应该是不可见的</Name>
   <Description>互操作层不应该是公共的。DllImport 特性不应该应用于可公开访问的成员(公共成员或受保护的成员)。</Description>
   <Resolution Name="Default">更改 P/Invoke {0} 的可访问性，使它在自己的程序集外部不再是可见的。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>属性名不应与 get 方法冲突。</Name>
   <Description>发现与某一属性同名的 Get 方法。Get 方法和属性的名称应能够明确区分其功能上的差异。有关如何选择属性名以区分于方法名的信息，请参阅设计指南。</Description>
   <Resolution Name="BaseType">由于存在继承方法 {1}，属性名 {0} 会造成混淆。请重命名或移除该属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>移除未使用的局部变量</Name>
   <Description>移除方法实现中未使用过的或只赋过值的局部变量。</Description>
   <Resolution Name="Default">{0} 声明类型为 {2} 的变量 {1}，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>检查未使用的参数</Name>
   <Description>检查在非虚方法的方法体中未使用的参数，以确保不存在应该访问这些参数的情况。未使用的参数会带来维护和性能开销。有时，与该规则冲突可能说明方法中存在实现 Bug，即，该参数实际上应该已在方法体中使用了。如果该参数由于向后兼容性而必须存在，请忽略关于此规则的警告。</Description>
   <Resolution Name="Default">从未用过 {1} 的参数 {0}。请移除该参数或在方法体中使用它。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>设置数据类型的区域设置</Name>
   <Description>在多数情况下，应将 DataSet 和 DataTable 实例的 Locale 显式设置为 CultureInfo.InvariantCulture。在创建 DataSet 或 DataTable 实例时，将 Locale 设置为当前区域。在多数情况下，应将 Locale 设置为 CultureInfo.InvariantCulture，以保证所有区域中的排序行为都正确。</Description>
   <Resolution Name="Default">只要 {1} 创建了 {0} 类型的实例，就必须设置这一 Locale 属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>指定 CultureInfo</Name>
   <Description>如果存在一个采用 CultureInfo 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。CultureInfo 类型包含区域性特定的信息，这些信息是执行数字和字符串运算(如大小写转换、格式设置和字符串比较)所必需的。如果区域性之间的转换和分析行为应始终不变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>指定 IFormatProvider</Name>
   <Description>如果存在一个采用 IFormatProvider 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。运行时中的某些方法可以将值与字符串表示形式相互进行转换，并采用一个字符串参数。该参数中包含一个或多个称为格式说明符的字符，用于指示如何对值进行转换。如果格式说明符的含义因区域性而异，则格式设置对象提供在字符串表示形式中使用的实际字符。如果排序和比较行为不得因区域性而改变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="IFormatProviderAlternate">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果 {2} 的结果将基于用户的输入，请指定 {3} 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 {4}。</Resolution>
   <Resolution Name="IFormatProviderAlternateString">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请指定 {3} 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>指定对 P/Invoke 字符串参数进行封送处理</Name>
   <Description>在将字符串封送为 ANSI (在 Win9x 上为 Auto)时，某些字符可能会改变。如果启用了最佳匹配映射，则采用 Unicode 编码时显示样式不同的字符串将封送到相同的 ANSI 字符串，这可能会导致错误的安全决策。禁用最佳匹配映射会降低此风险，因为所有没有等效项的字符都将映射到“?”。另外，请注意，CharSet.Ansi 是所有字符串的默认封送设置；Unicode 封送必须显式指定为 DllImport 或 StructLayout 的 CharSet 设置，或者指定为具有 Unicode (或与系统相关的) UnmanagedType 的 MarshalAs 特性。</Description>
   <Resolution Name="ParameterImplicitAnsi">为了降低安全风险，请将参数 {0} 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>指定 MessageBoxOptions</Name>
   <Description>为在从右向左的系统上正确运行，对 MessageBox.Show 的所有调用都应使用指定 MessageBoxOptions 作为参数的重载。程序在运行时应检测其是否在从右向左的系统上运行，并传递相应的 MessageBoxOptions 值以便正确显示。</Description>
   <Resolution Name="Default">更改 {0} 以调用指定 MessageBoxOptions 的 MessageBox.Show 重载，并确保当父控件的 RightToLeft 设置为 RightToLeft.Yes 时，设置 MessageBoxOptions.RightAlign 和 MessageBoxOptions.RtlReading。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>指定 StringComparison</Name>
   <Description>如果存在采用 StringComparison 参数的重载，则始终先调用此重载，而不是那些不接受该参数的重载。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>静态容器类型不应具有构造函数</Name>
   <Description>不需要创建只定义静态成员的类型的实例。如果没有指定构造函数，许多编译器都会自动添加公共的默认构造函数。为了避免出现这种情况，可能需要添加一个空的私有构造函数。</Description>
   <Resolution Name="CSharp2_0">由于类型 {0} 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>使用字符串长度测试是否有空字符串</Name>
   <Description>若要测试是否有空字符串，请检查 String.Length 是否等于零。对于如 "".Equals(someString) 和 String.Empty.Equals(someString) 之类的构造，其效率低于字符串长度测试。请使用 someString.Length == 0 检查来替换它们。</Description>
   <Resolution Name="IsNullOrEmpty">使用“String.IsNullOrEmpty”调用来替换 {1} 中的 {0} 调用。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>具有可释放字段的类型应该是可释放的</Name>
   <Description>声明可释放成员的类型也应实现 IDisposable。如果该类型没有任何非托管资源，请不要在其上实现终结器。</Description>
   <Resolution Name="DependsOnFix">在 {0} 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: {1}。如果以前提供过 {0}，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>在适用处使用属性</Name>
   <Description>在大多数情况下，应使用属性而不是 Get/Set 方法。在下列情况下，方法比属性更可取: 第一，执行的是转换操作，操作开销大或具有显著的副作用；第二，执行的顺序很重要；第三，连续两次调用成员得到的结果不同；第四，静态成员却返回了可变的值；第五，成员返回了数组。</Description>
   <Resolution Name="Default">如果可行，请将 {0} 改为属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="ExceptionEdge">在方法 {0} 中，{1} 对象未按所有异常路径释放。请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="请不要将文本作为本地化参数传递" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>请不要将文本作为本地化参数传递</Name>
   <Description>嵌入源代码的文本字符串难以进行本地化。对于通常应使用本地化的文本字符串的情况，要避免将文本字符串作为参数来传递。</Description>
   <Resolution Name="KnownValue">方法 {0} 将一个文本字符串作为对 {2} 的调用的参数“{1}”传递。改为从资源表检索以下字符串: {3}。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062">
   <Name>验证公共方法的参数</Name>
   <Description>应检查传递给外部可见方法的所有引用参数是否为 Null (在 VB 中为 Nothing)。如果适用，在参数为 null 时，引发 System.ArgumentNullException。</Description>
   <Resolution Name="Default">在外部可见方法 {0} 中，请在使用参数“{1}”之前先对其进行验证。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
