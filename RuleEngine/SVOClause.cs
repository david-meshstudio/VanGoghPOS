// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 12-2-1 ÏÂÎç4:09    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Reflection;

namespace COM.MeshStudio.Lib.Rule
{
	public class SVOClause {
		public String ID, name, ruleName;
		public RuleEnum.RuleParts rulePart;
		public RuleEnum.RuleSubjects ruleSubject;
		public List<String> ruleSubjectParameter;
		public RuleEnum.RuleVerbs ruleVerb;
		public List<String> ruleVerbParameter;
		public RuleEnum.RuleObjects ruleObject;
		public List<String> ruleObjectParameter;
		public Object ruleResultObj;
		public bool isSubClause;
		public RuleEnum.RuleModes ruleMode;
	
		public SVOClause() {
			ID = "";
			name = "";
			ruleName = "";
			ruleSubjectParameter = new List<String>();
			ruleVerbParameter = new List<String>();
			ruleObjectParameter = new List<String>();
			isSubClause = false;
		}
	
		public void SetValue(String variableName, String variableValue) {
			if (variableName.Equals("ruleSubject")) {
				ruleSubject = (RuleEnum.RuleSubjects) Enum.Parse(typeof(RuleEnum.RuleSubjects), variableValue);
			} else if (variableName.Equals("ruleVerb")) {
				ruleVerb = (RuleEnum.RuleVerbs) Enum.Parse(typeof(RuleEnum.RuleVerbs), variableValue);
			} else if (variableName.Equals("ruleObject")) {
				ruleObject = (RuleEnum.RuleObjects) Enum.Parse(typeof(RuleEnum.RuleObjects), variableValue);
			} else if (variableName.Equals("rulePart")) {
				rulePart = (RuleEnum.RuleParts) Enum.Parse(typeof(RuleEnum.RuleParts), variableValue);
			} else {
				try {
					FieldInfo f = this.GetType().GetField(variableName);
					f.SetValue(this, variableValue);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					Console.Error.WriteLine(e.StackTrace);
				}
			}
		}
	
		public bool IsSubClause() {
			return isSubClause;
		}
	
		public void SetSubClause(bool isSubClause_0) {
			this.isSubClause = isSubClause_0;
		}
	}
}
